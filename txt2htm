#! /usr/bin/perl
#
# This is a Perl script used to convert the Icarus Wing source to HTML

my $speaker;
my $counter = 0;
my $in_quoted_block = 0;
my $line_number = 0;

$textcolor{Bible}="#{0.7,0,0";

$textcolor{Mercuriou}="#{0.4,0.2,0";
$textcolor{Burns}="#{0.3,0.3,0";
$textcolor{Vic}="#{0.4,0,0.4";
$textcolor{Alister}="#{0,0.4,0";
$textcolor{Andrea}="#{0,0,0.4";

$textcolor{Kyle}="#{0,0,0";
$textcolor{David}="#{0,0,0";

$textcolor{Ecks}="#{0.5,0,0.5";
$textcolor{Wye}="#{0.7,0.7,0";
$textcolor{Zee}="#{0,0.5,0.5";

$textcolor{Janders}="#{0,0.5,0.5";
$textcolor{McGee}="#{0.7,0.7,0";
$textcolor{alNass}="#{0.5,0,0.5";
$textcolor{Radio}="#{0,0,0";

sub insertTOC {

    print q|
<center><h3>
Requirements for
The Great anti-American Novel
</h3></center>
|;

    open(ICARUSWING, "<IcarusWing");
    while (<ICARUSWING>) {
	if (/^T / or /^Launch Day/) {
	    s/^.*    //;
	    unless (/^T / or /^Launch Day/) {
		print;
		print "<br/>\n";
	    }
	}
    }
    close(ICARUSWING);

    #print "\\end{verbatim}\n";
}

sub ProcessLine {

    s/\$/\\\$/;				# quote $

    s/Christian1/Christian\$^1\$/;	# add superscripts to "Christian"
    s/Christians1/Christians\$^1\$/;
    s/Christian2/Christian\$^2\$/;
    s/Christians2/Christians\$^2\$/;

    s/^al-Nass:/alNass:/;		# handle the hyphen like this

    # The speaking character can be indicated by a notation at the
    # beginning of the line or paragraph like "Alister:".  Note
    # if this is the case, or undef $speaker if we're at a blank
    # line (in between paragraphs)

    $speaker=$1 if (/^((\w|-)+):/);
    undef $speaker if (/^$/);
    $counter=0 if (/^$/);

    # Remove speaker indication now that we've processed it.
    s/^(\w+)://;

    # Set text color for material in quotes according to speaker
    # Actual colors are defined above in the LaTeX preamble.

    while (/"/ and defined $speaker) {
	if ($counter % 2 == 0) {
	    my $speaker1 = $speaker;
	    if ($speaker =~ s/([^_]+)_(.*)/$2/) {
		$speaker1 = $1;
	    }
	    s|"|<font color='$textcolor{$speaker1}'>``|;
	} else {
	    s|"|''</font>|;
	}

	$counter ++;
    }

    while (/"/ and not /\\"/) {
	if ($counter % 2 == 0) {
	    s/"/``/;
	} else {
	    s/"/''/;
	}

	$counter ++;
    }

    # XXX
    #s/_([-\w',!.?;]+)_/{\\it \1}/g;	# convert _ to italics
    s/_/ /g;				# convert interior _ to spaces

    # Change '    ' in chapter title lines to hskip
    if (/^T [+-] [0-9]+/ || /^Launch Day/ || /^Epilog/) {
	s/    //;
	$line_number = 0;
    } else {
	$line_number ++;
    }

    # Put chapter titles on new pages in typewriter font
    #   the centerline is there to make T + 1 day overfill
    s|^T [+-] [0-9]+.*$|<tt>$&</tt>|;

    # Ditto for Launch Day
    s|^Launch Day+.*$|<tt>$&</tt>|;

    # Ditto for Epilog
    s|^Epilog+.*$|<tt>$&</tt>|;

    if (m|^{| && $line_number == 1) {
    }

    # Format poetry - with italics {{ }}
    s|^{{([^}]*)}}$|<center><em>\1</em></center>|;

    # Format dedication at beginning - without italics {
    s|^{([^}]*)$|<center>\1</center>|;

    # Insert a math equation
    s|STOKES\.|\$\$\\int_{\\delta C} w = \\int_C dw\$\$|;

    s|^$|<p>|);

    # Indent quoted blocks
    if (/^   / and not $in_quoted_block) {
	print "\\begin{quote}\n";
	$in_quoted_block = 1;
    }
    if (not /^   / and not /^$/ and $in_quoted_block) {
	print "\\end{quote}\n";
	$in_quoted_block = 0;
    }

    if (/Requirements for The Great anti-American Novel/) {
	&insertTOC;
    } else {
	print;
    }
}

sub ProcessFile {
    my ($FILE) = @_;

    while (<$FILE>) {
	my $filename = $_;
	chomp $filename;

	if ($filename =~ m/^[-A-Z 0-9]*$/ and -r $filename) {
	    open(NESTED_FILE, "<$filename");
	    ProcessFile(\*NESTED_FILE);
	    close(NESTED_FILE);
	} else {
	    ProcessLine;
	}
    }
}

print q|
<HTML>

<HEAD>
<TITLE>IcarusWing</TITLE>

<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<BODY>

<center><h1>Icarus Wing</h1>

<!--vskip 4in-->\vskip 4in

<center>by Brent Baccala</center>

|;


ProcessFile(\*STDIN);

print q|
</BODY></HTML>
|;
